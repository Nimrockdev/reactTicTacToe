{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAQA,SAASA,EAAOC,GACZ,OAAS,4BAASC,UAAY,SAC1BC,QAAYF,EAAME,SADb,IAC2BF,EAAMG,MADjC,K,IAKPC,E,kDAEF,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CAAEC,QAASC,MAAM,GAAGC,KAAK,MAAOC,SAAS,GAFvC,E,wDAKPC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KACxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAIhBC,GAAI,IAAD,OACZ,OAAS,kBACLX,EADK,CACEI,MAAUQ,KAAKN,MAAMC,QAAQI,GACpCR,QACI,kBAAM,EAAKa,YAAYL,Q,+BAO/B,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAI1C,OAFcU,EAAVC,EAAmB,WAAaA,EAA0B,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAEnG,6BACL,yBACIR,UAAY,UADhB,IAC6Be,EAD7B,KADK,KAE0C,yBAC3Cf,UAAY,aAD+B,IACfU,KAAKO,aAAa,GADH,IACUP,KAAKO,aAAa,GAD5B,IACmCP,KAAKO,aAAa,GADrD,KAF1C,KAG6G,yBAC9GjB,UAAY,aADkG,IAClFU,KAAKO,aAAa,GADgE,IACzDP,KAAKO,aAAa,GADuC,IAChCP,KAAKO,aAAa,GADc,KAH7G,KAI6G,yBAC9GjB,UAAY,aADkG,IAClFU,KAAKO,aAAa,GADgE,IACzDP,KAAKO,aAAa,GADuC,IAChCP,KAAKO,aAAa,GADc,KAJ7G,U,GAhCGC,IAAMC,WA2CpBC,E,uKAEE,OAAS,yBACDpB,UAAY,QAChB,yBACIA,UAAY,cAChB,kBACAG,EADA,OAJK,IAOC,yBACFH,UAAY,aAChB,sCAFM,IAGyB,qCAHzB,KAPD,S,GAFEkB,IAAMC,WA4BzB,SAASP,EAAgBP,GAWrB,IAVA,IAAMgB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACjBY,EAAMZ,GADW,GAC5Bc,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GAClE,OAAOpB,EAAQkB,GAGvB,OAAO,KAvBXG,IAASC,OAAQ,kBACbP,EADa,MAEbQ,SAASC,eAAe,W","file":"static/js/main.fd1386d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction Square(props) {\r\n    return ( < button className = \"square\"\r\n        onClick = { props.onClick } > { props.value } < /button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { squares: Array(9).fill(null), xIsNext: true, };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) { return; }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return ( <\r\n            Square value = { this.state.squares[i] }\r\n            onClick = {\r\n                () => this.handleClick(i)\r\n            }\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) { status = 'Winner: ' + winner; } else { status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O'); }\r\n\r\n        return ( < div >\r\n            <\r\n            div className = \"status\" > { status } < /div>  <\r\n            div className = \"board-row\" > { this.renderSquare(0) } { this.renderSquare(1) } { this.renderSquare(2) } < /div>  <\r\n            div className = \"board-row\" > { this.renderSquare(3) } { this.renderSquare(4) } { this.renderSquare(5) } < /div>  <\r\n            div className = \"board-row\" > { this.renderSquare(6) } { this.renderSquare(7) } { this.renderSquare(8) } < /div>  < /\r\n            div >\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return ( <\r\n            div className = \"game\" >\r\n            <\r\n            div className = \"game-board\" >\r\n            <\r\n            Board / >\r\n            <\r\n            /div> <\r\n            div className = \"game-info\" >\r\n            <\r\n            div > { /* status */ } < /div> <\r\n            ol > { /* TODO */ } < /ol> < /\r\n            div > <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render( <\r\n    Game / > ,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}